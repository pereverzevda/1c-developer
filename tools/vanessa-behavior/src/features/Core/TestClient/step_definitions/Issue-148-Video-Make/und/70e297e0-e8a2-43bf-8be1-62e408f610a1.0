{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},0,"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Перем МаксКоличествоСекундПодключения,ТекКоличествоСекундПодключения,ИмяПеременнойКаталога,ПеременнаяОжидаемыйФайл;



&НаКлиенте
// Служебная функция.
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ВПолеУказанСуществующийКаталог(Парам01)"",""ВПолеУказанСуществующийКаталог"",""Когда в поле """"КаталогСкриптовСборкиВидео"""" указан существующий каталог"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВПолеЯУказываюПутьКОтносительномуКаталогу(Парам01,Парам02)"",""ВПолеЯУказываюПутьКОтносительномуКаталогу"",""И     в поле """"Каталог скриптов сборки видео"""" я указываю путь к относительному каталогу """"..\vanessa-ci\MakeVideoInstr"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯУбедилсяЧтоРаботаетЗвуковойДвижокПоСозданиюTTS()"",""ЯУбедилсяЧтоРаботаетЗвуковойДвижокПоСозданиюTTS"",""Дано Я убедился что работает звуковой движок по созданию TTS"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯУбедилсяЧтоКаталогУказанныйВРеквизитеСуществуетИлиСоздалЕго(Парам01)"",""ЯУбедилсяЧтоКаталогУказанныйВРеквизитеСуществуетИлиСоздалЕго"",""И я убедился что каталог указанный в реквизите """"ЗаписьВидеоКаталогДляВременныхФайлов"""" существует или создал его"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВПолеЯУказываюПутьКОтносительномуКаталогуИОчищаюКаталог(Парам01,Парам02)"",""ВПолеЯУказываюПутьКОтносительномуКаталогуИОчищаюКаталог"",""И     в поле """"Каталог для формирования инструкций Видео"""" я указываю путь к относительному каталогу """"tools\Video"""" и очищаю каталог"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВТеченииСекундВКаталогеЗаданномВПеременнойКонтекстаПоявилсяФайл(Парам01,Парам02,Парам03)"",""ВТеченииСекундВКаталогеЗаданномВПеременнойКонтекстаПоявилсяФайл"",""И в течении 1400 секунд в каталоге заданном в переменной контекста """"ПараметрКаталог"""" появился файл """"result.mp4"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВЛогеСообщенийTestClientНетСлова(Парам01)"",""ВЛогеСообщенийTestClientНетСлова"",""И в логе сообщений TestClient нет слова """"ошибка"""""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И     в поле ""Каталог output инструкция видео"" я указываю путь к относительному каталогу ""tools\Video"" и очищаю каталог
//@ВПолеЯУказываюПутьКОтносительномуКаталогуИОчищаюКаталог(Парам01,Парам02)
Процедура ВПолеЯУказываюПутьКОтносительномуКаталогуИОчищаюКаталог(ИмяЭлемента,ЧастьПути) Экспорт
	Каталог = Ванесса.Объект.КаталогИнструментов + ""\"" + ЧастьПути;
	Контекст.Вставить(""ПараметрКаталог"",Каталог);
	
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Каталог) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(Каталог);
	Иначе
		Ванесса.УдалитьКаталогКомандаСистемы(Каталог);
		Ванесса.СоздатьКаталогКомандаСистемы(Каталог);
	КонецЕсли;	 
	
	Ванесса.Шаг(""И В открытой форме в поле с заголовком """""" + ИмяЭлемента + """""" я ввожу текст """""" + Каталог + """""""");
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСуществованиеФайла()
	ИмяФайла = Контекст[ИмяПеременнойКаталога] + ""\"" + ПеременнаяОжидаемыйФайл;
	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		ОтключитьОбработчикОжидания(""ПроверитьСуществованиеФайла"");
		
		Ванесса.ПродолжитьВыполнениеШагов(Ложь);//шаг выполнился успешно
		Возврат;
	КонецЕсли;	 
	
	
	ТекКоличествоСекундПодключения = ТекКоличествоСекундПодключения + 1;
	
	Если ТекКоличествоСекундПодключения >= МаксКоличествоСекундПодключения Тогда
		ОтключитьОбработчикОжидания(""ПроверитьСуществованиеФайла"");
		Ванесса.ПродолжитьВыполнениеШагов(Истина);
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
//И в течении 60 секунд в каталоге заданном в переменной контекста ""ПараметрКаталог"" появился файл ""result.mp4""
//@ВТеченииСекундВКаталогеЗаданномВПеременнойКонтекстаПоявилсяФайл(Парам01,Парам02,Парам03)
Процедура ВТеченииСекундВКаталогеЗаданномВПеременнойКонтекстаПоявилсяФайл(КолСекунд,ПараметрКаталог,ОжидаемыйФайл) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();
	
	МаксКоличествоСекундПодключения = КолСекунд;
	ТекКоличествоСекундПодключения  = 0;
	ИмяПеременнойКаталога           = ПараметрКаталог;
	ПеременнаяОжидаемыйФайл         = ОжидаемыйФайл;
	
	ПодключитьОбработчикОжидания(""ПроверитьСуществованиеФайла"",1);
	
КонецПроцедуры

&НаКлиенте
//И     в поле ""Каталог скриптов сборки видео"" я указываю путь к относительному каталогу ""..\vanessa-ci\MakeVideoInstr""
//@ВПолеЯУказываюПутьКОтносительномуКаталогу(Парам01,Парам02)
Процедура ВПолеЯУказываюПутьКОтносительномуКаталогу(ИмяЭлемента,ЧастьПути) Экспорт
	Если Лев(ЧастьПути,2) = "".."" Тогда
		Файл = Новый Файл(Ванесса.Объект.КаталогИнструментов);
		
		Каталог = Файл.Путь + Сред(ЧастьПути,4);
	Иначе	
		Каталог = Ванесса.Объект.КаталогИнструментов + ""\"" + ЧастьПути;
	КонецЕсли;	 
	
	
	
	Ванесса.Шаг(""И В открытой форме в поле с заголовком """""" + ИмяЭлемента + """""" я ввожу текст """""" + Каталог + """""""");
КонецПроцедуры

&НаКлиенте
//И в логе сообщений TestClient нет слова ""ошибка""
//@ВЛогеСообщенийTestClientНетСлова(Парам01)
Процедура ВЛогеСообщенийTestClientНетСлова(Стр) Экспорт
		МассивСообщений = КонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно().ПолучитьТекстыСообщенийПользователю();
		
		Для каждого Сообщение Из МассивСообщений Цикл
			Если Найти(НРег(Сообщение),НРег(Стр)) > 0 Тогда
				ВызватьИсключение ""Найдено сообщение: "" + Сообщение;
			КонецЕсли;	 
			//Сообщить("""" + Сообщение);
		КонецЦикла;
КонецПроцедуры


&НаКлиенте
//Когда в поле ""КаталогСкриптовСборкиВидео"" указан существующий каталог
//@ВПолеУказанСуществующийКаталог(Парам01)
Процедура ВПолеУказанСуществующийКаталог(ИмяПоля) Экспорт
	Каталог = Ванесса.Объект[ИмяПоля];
	Если Не ЗначениеЗаполнено(Каталог) Тогда
		ВызватьИсключение ""Не реализовано."";
	КонецЕсли;	 
	
	Если Не Ванесса.ФайлСуществуетКомандаСистемы(Каталог) Тогда
		ВызватьИсключение ""Не реализовано."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И я убедился что каталог указанный в реквизите ""ЗаписьВидеоКаталогДляВременныхФайлов"" существует или создал его
//@ЯУбедилсяЧтоКаталогУказанныйВРеквизитеСуществуетИлиСоздалЕго(Парам01)
Процедура ЯУбедилсяЧтоКаталогУказанныйВРеквизитеСуществуетИлиСоздалЕго(ИмяРеквизита) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Ванесса.Объект[ИмяРеквизита]) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(Ванесса.Объект[ИмяРеквизита]);
	КонецЕсли;	 
	
КонецПроцедуры

&НаКлиенте
//Дано Я убедился что работает звуковой движок по созданию TTS
//@ЯУбедилсяЧтоРаботаетЗвуковойДвижокПоСозданиюTTS()
Процедура ЯУбедилсяЧтоРаботаетЗвуковойДвижокПоСозданиюTTS() Экспорт
	
	Если СокрЛП(Ванесса.Объект.ЗаписьВидеоПутьКДвижкуTTS) = """" Тогда
		ВызватьИсключение ""Не указана команда движка TTS!"";
	КонецЕсли;	 
	
	
	
	ФайлЛога = ПолучитьИмяВременногоФайла(""txt"");
	Команда = СокрЛП(Ванесса.Объект.ЗаписьВидеоПутьКДвижкуTTS) + "" -g > """""" + ФайлЛога + """""""";
	КомандаСистемы(Команда);
	
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ФайлЛога,""UTF-8"");
	
	Нашел = Ложь;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;	 
		
		Стр = СокрЛП(Стр);
		
		Если Лев(Стр,2) = ""1:"" Тогда
			Нашел = Истина;
			Прервать;
		КонецЕсли;	 
		
	КонецЦикла;	
	
	Текст.Закрыть();
	
	
	Если Не Нашел Тогда
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ФайлЛога,""UTF-8"");
		Сообщить(""Лог вывода кодманды:"");
		
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;	 
			
			Если СокрЛП(Стр) = """" Тогда
				Продолжить;
			КонецЕсли;	 
			
			Сообщить(Стр);
		КонецЦикла;	
		
		Текст.Закрыть();
		
		ВызватьИсключение ""Команда <"" + Команда + ""> выпонена не корректно!"";
	КонецЕсли;	 
	
КонецПроцедуры

//окончание текста модуля
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}