{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"//начало текста модуля

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
    Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""РежимЗапускаПриложения(Парам01)"",""РежимЗапускаПриложения"",""Тогда режим запуска приложения """"Толстый клиент"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТЧДанныеКлиентовТестированияVanessaBehavoirСодержитьсяСтрока(ТабПарам)"",""ВТЧДанныеКлиентовТестированияVanessaBehavoirСодержитьсяСтрока"",""И     в ТЧ ДанныеКлиентовТестирования VanessaBehavoir содержиться строка:"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт

КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Тогда режим запуска приложения ""Толстый клиент""
//@РежимЗапускаПриложения(Парам01)
Процедура РежимЗапускаПриложения(Парам01) Экспорт
	
	Ванесса.Шаг(""Когда В панели разделов я выбираю """"Основная"""""");
	Ванесса.Шаг(""И В панели функций я выбираю """"Выполнить произвольное выражение"""""");
	Ванесса.Шаг(""И в поле """"Текст выражения"""" я ввожу текст """"ТЗ = Новый ТаблицаЗначений;"""""");
	Ванесса.Шаг(""И я нажимаю на кнопку """"Выполнить выражение"""""");

	Попытка
		Ванесса.Шаг(""Тогда открылось окно """"1С:Предприятие"""""");
    	Ванесса.Шаг(""И     я нажимаю на кнопку """"OK"""""");
    	ТипЗапуска = ""Тонкий клиент"";
	Исключение
		ТипЗапуска = ""Толстый клиент"";
	КонецПопытки;
	
	Если ТипЗапуска <> Парам01 Тогда
		ВызватьИсключение ""Запуск приложения не соответствует указанному <"" + Парам01 + "">. Определен тип запуска <"" + ТипЗапуска + "">"";
	КонецЕсли;
	
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//И     в ТЧ ДанныеКлиентовТестирования VanessaBehavoir содержиться строка:
//@ВТЧДанныеКлиентовТестированияVanessaBehavoirСодержитьсяСтрока(ТабПарам)
Процедура ВТЧДанныеКлиентовТестированияVanessaBehavoirСодержитьсяСтрока(ТабПарам) Экспорт

	ДанныеКлиентовТестирования = Ванесса.ДанныеКлиентовТестирования;
	
	Шапка = ТабПарам[0];
	ТабПарамЗначения = ТабПарам[1];
	Отбор = Новый Структура;
	ПутьКПлатформе = Неопределено;
	Для ккк = 1 По Шапка.Количество() Цикл
		ИмяКолонки = Неопределено;
		Шапка.Свойство(""Кол"" + ккк, ИмяКолонки);
		
		ЗначениеКолонки = Неопределено;
		ТабПарамЗначения.Свойство(""Кол"" + ккк, ЗначениеКолонки);
		
		Если ИмяКолонки = ""Имя"" Тогда
			Отбор.Вставить(ИмяКолонки, ЗначениеКолонки);
		ИначеЕсли  ИмяКолонки = ""ПортЗапускаТестКлиента"" Тогда 
			Отбор.Вставить(ИмяКолонки, Число(ЗначениеКолонки));
		ИначеЕсли ИмяКолонки = ""ПутьКПлатформе"" Тогда
			ПутьКПлатформе = ЗначениеКолонки;
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтрока = ДанныеКлиентовТестирования.НайтиСтроки(Отбор);	
	Если НайденныеСтрока.Количество() > 0 Тогда
		НайденнаяСтрока = НайденныеСтрока[0];
		Если ЗначениеЗаполнено(ПутьКПлатформе) Тогда
			Если Не Ванесса.ЭтоLinux Тогда
				ПутьКПлатформе = ПутьКПлатформе + "".exe"";
			КонецЕсли;
			Если Сред(НайденнаяСтрока.ПутьКПлатформе, СтрДлина(НайденнаяСтрока.ПутьКПлатформе) - СтрДлина(ПутьКПлатформе)+1) <> ПутьКПлатформе Тогда
				ВызватьИсключение ""Ошибка заполнения ТЧ <Данные клиентов тестирования>. Колонка <Путь к платформе> не соответствует эталону"";
			КонецЕсли;			
		КонецЕсли;
	Иначе
		ВызватьИсключение ""Ошибка заполнения ТЧ <Данные клиентов тестирования>"";
	КонецЕсли;
	
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}