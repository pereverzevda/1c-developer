{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},0,"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",0,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПишуЗаголовокВложеннойФичиПоСозданиюЭлементаСправочника2()"",""ЯПишуЗаголовокВложеннойФичиПоСозданиюЭлементаСправочника2"",""И я пишу заголовок вложенной фичи по созданию элемента справочника2"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПишуСценарийВложеннойФичиПоСозданиюЭлементаСправочника2()"",""ЯПишуСценарийВложеннойФичиПоСозданиюЭлементаСправочника2"",""И я пишу сценарий  вложенной фичи по созданию элемента справочника2"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПишуЗаголовокВнешнейФичиПоСозданиюЭлементовСправочника2()"",""ЯПишуЗаголовокВнешнейФичиПоСозданиюЭлементовСправочника2"",""И я пишу заголовок внешней фичи по созданию элементов справочника2"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПишуСценарийВнешнейФичиПоСозданиюЭлементовСправочника2()"",""ЯПишуСценарийВнешнейФичиПоСозданиюЭлементовСправочника2"",""И я пишу сценарий  внешней фичи по созданию элементов справочника2"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗакрываюСеансСлужебнойБазы()"",""ЯЗакрываюСеансСлужебнойБазы"",""И я закрываю сеанс служебной базы"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУбедилсяЧтоСлужебныеФайлыПоФичеПередачеПараметровВСценарииУдалены()"",""ЯУбедилсяЧтоСлужебныеФайлыПоФичеПередачеПараметровВСценарииУдалены"",""Дано я убедился, что служебные файлы по фиче передаче параметров в сценарии удалены"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТекстовомРедактореЯВыбираюПодсветкуЯзыкаGherkin()"",""ВТекстовомРедактореЯВыбираюПодсветкуЯзыкаGherkin"",""И в текстовом редакторе я выбираю подсветку языка Gherkin"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯСохраняюФайлОткрытыйВРедактореКак(Парам01)"",""ЯСохраняюФайлОткрытыйВРедактореКак"",""И я сохраняю файл открытый в редакторе как """"Support\Instructions\Temp\СозданиеОдногоЭлементаСправочникаТовары.feature"""""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯСоздаюВТекстовомРедактореНовыйФайл()"",""ЯСоздаюВТекстовомРедактореНовыйФайл"",""И я создаю в текстовом редакторе новый файл"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗапускаюСеансTestManagerВСлужебнойБазе()"",""ЯЗапускаюСеансTestManagerВСлужебнойБазе"",""Когда Я запускаю сеанс TestManager в служебной базе"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯОжидаюОкончанияВыполненияСценариевВСеансеСлужебнойБазы()"",""ЯОжидаюОкончанияВыполненияСценариевВСеансеСлужебнойБазы"",""И я ожидаю окончания выполнения сценариев в сеансе служебной базы"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	//УдалитьСлужебныеФайлы();
	//Ванесса.Шаг(""И я закрываю сеанс служебной базы"");
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСлужебныеФайлы()
	Путь = Ванесса.Объект.КаталогИнструментов + ""\features\Support\Instructions\Temp"";
	Если НЕ Ванесса.ФайлСуществуетКомандаСистемы(Путь) Тогда
		Ванесса.СоздатьКаталогКомандаСистемы(Путь);
	КонецЕсли;	 
	
	Путь = Ванесса.Объект.КаталогИнструментов + ""\features\Support\Instructions\Temp\СозданиеОдногоЭлементаСправочникаТовары.feature"";
	Если Ванесса.ФайлСуществуетКомандаСистемы(Путь) Тогда
		Ванесса.УдалитьФайлыКомандаСистемы(Путь);
	КонецЕсли;	 
	
	Путь = Ванесса.Объект.КаталогИнструментов + ""\features\Support\Instructions\Temp\СозданиеНесколькихЭлементовСправочникаТовары.feature"";
	Если Ванесса.ФайлСуществуетКомандаСистемы(Путь) Тогда
		Ванесса.УдалитьФайлыКомандаСистемы(Путь);
	КонецЕсли;	 
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано я убедился, что служебные файлы по фиче передаче параметров в сценарии удалены
//@ЯУбедилсяЧтоСлужебныеФайлыПоФичеПередачеПараметровВСценарииУдалены()
Процедура ЯУбедилсяЧтоСлужебныеФайлыПоФичеПередачеПараметровВСценарииУдалены() Экспорт
	УдалитьСлужебныеФайлы();
	//Предупреждение(""ПОТОМ ВЕРНУТЬ!!!"");
КонецПроцедуры

&НаКлиенте
//И я пишу заголовок вложенной фичи по созданию элемента справочника2
//@ЯПишуЗаголовокВложеннойФичиПоСозданиюЭлементаСправочника2()
Процедура ЯПишуЗаголовокВложеннойФичиПоСозданиюЭлементаСправочника2() Экспорт
	
КонецПроцедуры

&НаКлиенте
//И я пишу сценарий  вложенной фичи по созданию элемента справочника2
//@ЯПишуСценарийВложеннойФичиПоСозданиюЭлементаСправочника2()
Процедура ЯПишуСценарийВложеннойФичиПоСозданиюЭлементаСправочника2() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я пишу заголовок внешней фичи по созданию элементов справочника2
//@ЯПишуЗаголовокВнешнейФичиПоСозданиюЭлементовСправочника2()
Процедура ЯПишуЗаголовокВнешнейФичиПоСозданиюЭлементовСправочника2() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

&НаКлиенте
//И я пишу сценарий  внешней фичи по созданию элементов справочника2
//@ЯПишуСценарийВнешнейФичиПоСозданиюЭлементовСправочника2()
Процедура ЯПишуСценарийВнешнейФичиПоСозданиюЭлементовСправочника2() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ВызватьИсключение ""Не реализовано."";
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//И я сохраняю файл открытый в редакторе как ""Support\Instructions\Temp\СозданиеОдногоЭлементаСправочника2.feature""
//@ЯСохраняюФайлОткрытыйВРедактореКак(Парам01)
Процедура ЯСохраняюФайлОткрытыйВРедактореКак(ЧастьПути) Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + ""\tools\Sikuli\CtrlS.sikuli"");
	Ванесса.ПроверитьРавенство(Результат, 0 , ""Произошло выполнение скрипта <CtrlS>"");
	
	
	Путь = Ванесса.Объект.КаталогИнструментов + ""\features\"" + ЧастьПути;
	Ванесса.Шаг(""И я добавляю строку текста """""" + Путь + """""""");
КонецПроцедуры

&НаКлиенте
//И в текстовом редакторе я выбираю подсветку языка Gherkin
//@ВТекстовомРедактореЯВыбираюПодсветкуЯзыкаGherkin()
Процедура ВТекстовомРедактореЯВыбираюПодсветкуЯзыкаGherkin() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + ""\tools\Sikuli\ChooseGherkin.sikuli"");
	Ванесса.ПроверитьРавенство(Результат, 0 , ""Произошло выполнение скрипта <ChooseGherkin>"");
	
	Ванесса.Шаг(""И я добавляю строку текста """"Gherkin"""""");
КонецПроцедуры


&НаКлиенте
//И я создаю в текстовом редакторе новый файл
//@ЯСоздаюВТекстовомРедактореНовыйФайл()
Процедура ЯСоздаюВТекстовомРедактореНовыйФайл() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + ""\tools\Sikuli\CtrlN.sikuli"");
	Ванесса.ПроверитьРавенство(Результат, 0 , ""Произошло выполнение скрипта <CtrlN>"");
КонецПроцедуры

&НаКлиенте
//Когда Я запускаю сеанс TestManager в служебной базе
//@ЯЗапускаюСеансTestManagerВСлужебнойБазе()
Процедура ЯЗапускаюСеансTestManagerВСлужебнойБазе() Экспорт
	Ванесса.СоздатьСлужебныеБазыЕслиИхНет();
	
	Ванесса.ЗапуститьСеансСлужебнойБазы(""v83ServiceBase836"",""ENTERPRISE"",""/TESTMANAGER /CLibsOnly"");
	
	Ванесса.sleep(5);
	
КонецПроцедуры

&НаКлиенте
//И я ожидаю окончания выполнения сценариев в сеансе служебной базы
//@ЯОжидаюОкончанияВыполненияСценариевВСеансеСлужебнойБазы()
Процедура ЯОжидаюОкончанияВыполненияСценариевВСеансеСлужебнойБазы() Экспорт
	Ванесса.ЭтотШагНеНадоМасштабироватьВВидео();
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + ""\tools\Sikuli\WaitForStringAllScenariosOK.sikuli"");
	Ванесса.ПроверитьРавенство(Результат, 0 , ""Произошло выполнение скрипта <WaitForStringAllScenariosOK>"");
КонецПроцедуры

&НаКлиенте
//И я закрываю сеанс служебной базы
//@ЯЗакрываюСеансСлужебнойБазы()
Процедура ЯЗакрываюСеансСлужебнойБазы() Экспорт
	Результат = Ванесса.ВыполнитьSikuliСкрипт(Ванесса.Объект.КаталогИнструментов + ""\tools\Sikuli\Exit1C.sikuli"");
	Ванесса.ПроверитьРавенство(Результат, 0 , ""Произошло выполнение скрипта <Exit1C>"");
КонецПроцедуры

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}