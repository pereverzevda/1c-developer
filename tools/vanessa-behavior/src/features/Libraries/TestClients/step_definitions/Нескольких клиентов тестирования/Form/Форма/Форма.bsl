//начало текста модуля

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюПользователя(ИмяПользователя)","ЯУдаляюПользователя","Когда Я удаляю пользователя ""ИмяПользователя""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеЕстьПользовательСПаролем(Парам01,Парам02)","ВБазеЕстьПользовательСПаролем","Когда в базе есть пользователь ""VanessaUser1"" с паролем ""1""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗаполняюСписокТаблицыДанныеКлиентовТестирования()","ЗаполняюСписокТаблицыДанныеКлиентовТестирования","И    заполняю список таблицы ДанныеКлиентовТестирования");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти

#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано в базе есть пользователь "User1" с паролем "1"
//@ВБазеЕстьПользовательСПаролем(Парам01,Парам02)
Процедура ВБазеЕстьПользовательСПаролем(Логин, Пароль) Экспорт
	
	СоздатьПользоваталяИБНаСервере(Логин, Пароль);
	
	Попытка
		ВремяНачалаТестирования = КонтекстСохраняемый.ВремяНачалаТестирования;
	Исключение
		КонтекстСохраняемый.Вставить("ВремяНачалаТестирования", ТекущаяДата());
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура СоздатьПользоваталяИБНаСервере(Логин, Пароль)

	Если ПользователиИнформационнойБазы.НайтиПоИмени(Логин) = Неопределено Тогда
		Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
		Пользователь.Имя    = Логин;
		Пользователь.Пароль = Пароль;
		Пользователь.Роли.Добавить(Метаданные.Роли.Админ);
		Пользователь.АутентификацияСтандартная = Истина;
		Пользователь.ПоказыватьВСпискеВыбора = Истина;
		Пользователь.Записать();
	КонецЕсли;

КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//Когда Я удаляю пользователя "VanessaUser1"
//@ЯУдаляюПользователя(ИмяПользователя)
Процедура ЯУдаляюПользователя(ИмяПользователя) Экспорт
	
	ВремяНачалаТестирования = КонтекстСохраняемый.ВремяНачалаТестирования;
	ЯУдаляюПользователяНаСервере(ИмяПользователя);
	
КонецПроцедуры

&НаСервере
Процедура ЯУдаляюПользователяНаСервере(ИмяПользователя)

	НайденыйПользователь = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя);
	НайденыйПользователь.Удалить();

КонецПроцедуры

&НаКлиенте
//И    заполняю список таблицы ДанныеКлиентовТестирования
//@ЗаполняюСписокТаблицыДанныеКлиентовТестирования()
Процедура ЗаполняюСписокТаблицыДанныеКлиентовТестирования() Экспорт
	ДанныеКлиентовТестирования = Ванесса.ДанныеКлиентовТестирования;
	ДанныеКлиентовТестирования.Очистить();

	ЭтоLinux = Ложь;
	СисИнфо = Новый СистемнаяИнформация;
	Если Найти(Строка(СисИнфо.ТипПлатформы), "Linux")>0 Тогда 
		ЭтоLinux = Истина;
	КонецЕсли;
	
	Стр = ДанныеКлиентовТестирования.Добавить();
	Стр.Имя = "VanessaUser1";
	Стр.Подключен = Ложь;
	КаталогБазы = СтрокаСоединенияИнформационнойБазы();
	Если Найти(ВРег(КаталогБазы),ВРег("File=")) = 0 Тогда
		Стр.Серверная = Истина;
	КонецЕсли;
	
	СтрокаЗапуска1с = КаталогПрограммы() + "1cv8c";
	Если ЭтоLinux = Ложь Тогда
		СтрокаЗапуска1с = СтрокаЗапуска1с + ".exe";
	КонецЕсли;
	
	Стр.ПутьКПлатформе = СтрокаЗапуска1с;
	Стр.ПутьКИнфобазе  = КаталогБазы;
	Стр.Порт = Ванесса.ПроверитьПортНаЗанятость(48011);
	
	Стр = ДанныеКлиентовТестирования.Добавить();
	Стр.Имя = "VanessaUser2";
	Стр.Подключен = Ложь;
	КаталогБазы = СтрокаСоединенияИнформационнойБазы();
	Если Найти(ВРег(КаталогБазы),ВРег("File=")) = 0 Тогда
		Стр.Серверная = Истина;
	КонецЕсли;
	
	СтрокаЗапуска1с = КаталогПрограммы() + "1cv8c";
	Если ЭтоLinux = Ложь Тогда
		СтрокаЗапуска1с = СтрокаЗапуска1с + ".exe";
	КонецЕсли;
	
	Стр.ПутьКПлатформе = СтрокаЗапуска1с;
	Стр.ПутьКИнфобазе  = КаталогБазы;
	Стр.Порт = Ванесса.ПроверитьПортНаЗанятость(48012);
	
КонецПроцедуры
