{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",0,0,0,0,0,0,3,3,0,0,0},"
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеСтроки(Парам01,Парам02)"",""ВТаблицеСтроки"",""И     в таблице """"ТабличнаяЧасть1"""" 2 строки"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеСтрок(Парам01,Парам02)"",""ВТаблицеСтрок"",""И     в таблице """"ТабличнаяЧасть1"""" 10 строк"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеСтрока(Парам01,Парам02)"",""ВТаблицеСтрока"",""И     в таблице """"ТабличнаяЧасть1"""" 1 строка"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеБольшеИлиРавноСтрок(Парам01,Парам02)"",""ВТаблицеБольшеИлиРавноСтрок"",""И     в таблице """"ТабличнаяЧасть1"""" больше или равно 2 строк"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеБольшеИлиРавноСтроки(Парам01,Парам02)"",""ВТаблицеБольшеИлиРавноСтроки"",""И     в таблице """"ТабличнаяЧасть1"""" больше или равно 1 строки"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеБольшеСтроки(Парам01,Парам02)"",""ВТаблицеБольшеСтроки"",""И     в таблице """"ТабличнаяЧасть1"""" больше 1 строки"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеБольшеСтрок(Парам01,Парам02)"",""ВТаблицеБольшеСтрок"",""И     в таблице """"ТабличнаяЧасть1"""" больше 0 строк"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеМеньшеСтрок(Парам01,Парам02)"",""ВТаблицеМеньшеСтрок"",""И     в таблице """"ТабличнаяЧасть1"""" меньше 3 строк"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеМеньшеСтроки(Парам01,Парам02)"",""ВТаблицеМеньшеСтроки"",""И     в таблице """"ТабличнаяЧасть1"""" меньше 1 строки"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеМеньшеИлиРавноСтрок(Парам01,Парам02)"",""ВТаблицеМеньшеИлиРавноСтрок"",""И     в таблице """"ТабличнаяЧасть1"""" меньше или равно 2 строк"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВТаблицеМеньшеИлиРавноСтроки(Парам01,Парам02)"",""ВТаблицеМеньшеИлиРавноСтроки"",""И     в таблице """"ТабличнаяЧасть1"""" меньше или равно 1 строки"",""Проверяет количество строк в таблице"",""UI.Таблицы.Количество строк"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" 2 строки
//@ВТаблицеСтроки(Парам01,Парам02)
Процедура ВТаблицеСтроки(ИмяТаблицы,КоличествоСтрок) Экспорт
	ТЧ      = Ванесса.НайтиТЧПоИмени(ИмяТаблицы);
	Таблица = Ванесса.ПолучитьЗначениеТестируемаяТаблицаФормы(ТЧ);
	Если Таблица = Неопределено Тогда
		ВызватьИсключение ""Не смог получить строки ТЧ <"" + ИмяТаблицы + "">"";
	КонецЕсли;	 
	
	Если Таблица.Количество() <> КоличествоСтрок Тогда
		ВызватьИсключение ""В таблице <"" + ИмяТаблицы + ""> ожидали получить <"" + КоличествоСтрок + ""> строк, а получили <"" + Таблица.Количество() + ""> строк."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" 10 строк
//@ВТаблицеСтрок(Парам01,Парам02)
Процедура ВТаблицеСтрок(ИмяТаблицы,КоличествоСтрок) Экспорт
	ВТаблицеСтроки(ИмяТаблицы,КоличествоСтрок);
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" 1 строка
//@ВТаблицеСтрока(Парам01,Парам02)
Процедура ВТаблицеСтрока(ИмяТаблицы,КоличествоСтрок) Экспорт
	ВТаблицеСтроки(ИмяТаблицы,КоличествоСтрок);
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" больше или равно 2 строк
//@ВТаблицеБольшеИлиРавноСтрок(Парам01,Парам02)
Процедура ВТаблицеБольшеИлиРавноСтрок(ИмяТаблицы,КоличествоСтрок) Экспорт
	ТЧ      = Ванесса.НайтиТЧПоИмени(ИмяТаблицы);
	Таблица = Ванесса.ПолучитьЗначениеТестируемаяТаблицаФормы(ТЧ);
	Если Таблица = Неопределено Тогда
		ВызватьИсключение ""Не смог получить строки ТЧ <"" + ИмяТаблицы + "">"";
	КонецЕсли;	 
	
	Если Таблица.Количество() < КоличествоСтрок Тогда
		ВызватьИсключение ""В таблице <"" + ИмяТаблицы + ""> ожидали получить больше или равно <"" + КоличествоСтрок + ""> строк, а получили <"" + Таблица.Количество() + ""> строк."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" больше или равно 1 строки
//@ВТаблицеБольшеИлиРавноСтроки(Парам01,Парам02)
Процедура ВТаблицеБольшеИлиРавноСтроки(ИмяТаблицы,КоличествоСтрок) Экспорт
	ВТаблицеБольшеИлиРавноСтрок(ИмяТаблицы,КоличествоСтрок);
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" больше 1 строки
//@ВТаблицеБольшеСтроки(Парам01,Парам02)
Процедура ВТаблицеБольшеСтроки(ИмяТаблицы,КоличествоСтрок) Экспорт
	ТЧ      = Ванесса.НайтиТЧПоИмени(ИмяТаблицы);
	Таблица = Ванесса.ПолучитьЗначениеТестируемаяТаблицаФормы(ТЧ);
	Если Таблица = Неопределено Тогда
		ВызватьИсключение ""Не смог получить строки ТЧ <"" + ИмяТаблицы + "">"";
	КонецЕсли;	 
	
	Если Таблица.Количество() <= КоличествоСтрок Тогда
		ВызватьИсключение ""В таблице <"" + ИмяТаблицы + ""> ожидали получить больше <"" + КоличествоСтрок + ""> строк, а получили <"" + Таблица.Количество() + ""> строк."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" больше 0 строк
//@ВТаблицеБольшеСтрок(Парам01,Парам02)
Процедура ВТаблицеБольшеСтрок(ИмяТаблицы,КоличествоСтрок) Экспорт
	ВТаблицеБольшеСтроки(ИмяТаблицы,КоличествоСтрок);
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" меньше 3 строк
//@ВТаблицеМеньшеСтрок(Парам01,Парам02)
Процедура ВТаблицеМеньшеСтрок(ИмяТаблицы,КоличествоСтрок) Экспорт
	ТЧ      = Ванесса.НайтиТЧПоИмени(ИмяТаблицы);
	Таблица = Ванесса.ПолучитьЗначениеТестируемаяТаблицаФормы(ТЧ);
	Если Таблица = Неопределено Тогда
		ВызватьИсключение ""Не смог получить строки ТЧ <"" + ИмяТаблицы + "">"";
	КонецЕсли;	 
	
	Если Таблица.Количество() >= КоличествоСтрок Тогда
		ВызватьИсключение ""В таблице <"" + ИмяТаблицы + ""> ожидали получить меньше <"" + КоличествоСтрок + ""> строк, а получили <"" + Таблица.Количество() + ""> строк."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" меньше 3 строки
//@ВТаблицеМеньшеСтроки(Парам01,Парам02)
Процедура ВТаблицеМеньшеСтроки(ИмяТаблицы,КоличествоСтрок) Экспорт
	ВТаблицеМеньшеСтрок(ИмяТаблицы,КоличествоСтрок);
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" меньше или равно 2 строк
//@ВТаблицеМеньшеИлиРавноСтрок(Парам01,Парам02)
Процедура ВТаблицеМеньшеИлиРавноСтрок(ИмяТаблицы,КоличествоСтрок) Экспорт
	ТЧ      = Ванесса.НайтиТЧПоИмени(ИмяТаблицы);
	Таблица = Ванесса.ПолучитьЗначениеТестируемаяТаблицаФормы(ТЧ);
	Если Таблица = Неопределено Тогда
		ВызватьИсключение ""Не смог получить строки ТЧ <"" + ИмяТаблицы + "">"";
	КонецЕсли;	 
	
	Если Таблица.Количество() < КоличествоСтрок Тогда
		ВызватьИсключение ""В таблице <"" + ИмяТаблицы + ""> ожидали получить меньше или равно <"" + КоличествоСтрок + ""> строк, а получили <"" + Таблица.Количество() + ""> строк."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И     в таблице ""ТабличнаяЧасть1"" меньше или равно 1 строки
//@ВТаблицеМеньшеИлиРавноСтроки(Парам01,Парам02)
Процедура ВТаблицеМеньшеИлиРавноСтроки(ИмяТаблицы,КоличествоСтрок) Экспорт
	ВТаблицеМеньшеИлиРавноСтрок(ИмяТаблицы,КоличествоСтрок);
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",503de865-4645-4496-b5dd-2e4a76236095}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}