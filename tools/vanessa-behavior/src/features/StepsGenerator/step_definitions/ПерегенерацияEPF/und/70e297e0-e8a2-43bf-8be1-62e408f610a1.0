{3,
{42,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Контекст",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КонтекстКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",1,
{21,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{10,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,"",2,0,0,0,0,0,3,3,0,0,2},"//начало текста модуля
&НаКлиенте
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;


&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	ДобавитьШагВМассивТестов(ВсеТесты,""ОчищеныВременныеФайлыРезультатовПрошлыхГенераций()"",""ОчищеныВременныеФайлыРезультатовПрошлыхГенераций"",""Дано Очищены временные файлы результатов прошлых генераций"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ОжидаемыйФайлEpfУжеСуществует()"",""ОжидаемыйФайлEpfУжеСуществует"",""И ожидаемый файл epf уже существует"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВОжидаемомФайлеУжеЕстьРеализованныеШаги()"",""ВОжидаемомФайлеУжеЕстьРеализованныеШаги"",""И в ожидаемом файле уже есть реализованные шаги"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ВФичеЕстьШагиКоторыхНетВОжидаемомEpfФайле()"",""ВФичеЕстьШагиКоторыхНетВОжидаемомEpfФайле"",""И в фиче есть шаги, которых нет в ожидаемом epf файле"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СгенерированныйEpfПрошелПроверкуНаКорректностьПослеПерегенерации()"",""СгенерированныйEpfПрошелПроверкуНаКорректностьПослеПерегенерации"",""И сгенерированный epf прошел проверку на корректность после перегенерации"");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	ИмяОжидаемогоФайла = Ванесса.Объект.КаталогИнструментов + ""\features\Support\Templates\step_definitions\ФичаДляПроверкиПерегенерацииEPF.epf"";
	Контекст.Вставить(""ИмяОжидаемогоФайла"",ИмяОжидаемогоФайла);
	ФайлПроверкаСуществования = Новый Файл(ИмяОжидаемогоФайла);
	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяОжидаемогоФайла) Тогда
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяОжидаемогоФайла);
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	ИмяОжидаемогоФайла = Контекст.ИмяОжидаемогоФайла;
	ФайлПроверкаСуществования = Новый Файл(ИмяОжидаемогоФайла);
	Если Ванесса.ФайлСуществуетКомандаСистемы(ИмяОжидаемогоФайла) Тогда
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяОжидаемогоФайла);
	КонецЕсли;	 
	
	//безусловное закрытие формы если она осталась
	Попытка
	    ОткрытаяФормаVanessaBehavoir = Контекст.ОткрытаяФормаVanessaBehavoir;
		ОткрытаяФормаVanessaBehavoir.Закрыть();
	Исключение
	
	КонецПопытки;
КонецПроцедуры


//&НаКлиенте
////я открыл форму VanessaBehavoir в режиме самотестирования
////@ЯОткрылФормуVanessaBehavoirВРежимеСамотестирования()
//Процедура ЯОткрылФормуVanessaBehavoirВРежимеСамотестирования() Экспорт
//	ВызватьИсключение ""Не реализовано."";
//КонецПроцедуры

//&НаКлиенте
////я загрузил специальную тестовую фичу ""ФичаДляПроверкиПерегенерацииEPF""
////@ЯЗагрузилСпециальнуюТестовуюФичу(Парам01Строка)
//Процедура ЯЗагрузилСпециальнуюТестовуюФичу(Парам01Строка) Экспорт
//	ВызватьИсключение ""Не реализовано."";
//КонецПроцедуры

//&НаКлиенте
////я перешел на закладку генератор EPF
////@ЯПерешелНаЗакладкуГенераторEPF()
//Процедура ЯПерешелНаЗакладкуГенераторEPF() Экспорт
//	ВызватьИсключение ""Не реализовано."";
//КонецПроцедуры

&НаСервере
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Макет = ОбъектСервер.ПолучитьМакет(ИмяМакета);
	Возврат  Макет;
КонецФункции	

&НаКлиенте
//ожидаемый файл epf уже существует
//@ОжидаемыйФайлEpfУжеСуществует()
Процедура ОжидаемыйФайлEpfУжеСуществует() Экспорт
	ИмяОжидаемогоФайла = Контекст.ИмяОжидаемогоФайла;
	Контекст.Вставить(""ИмяОжидаемогоФайла"",ИмяОжидаемогоФайла);
	ФайлСуществует = Ванесса.ФайлСуществуетКомандаСистемы(ИмяОжидаемогоФайла);
	Если ФайлСуществует Тогда
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяОжидаемогоФайла);
	КонецЕсли;	 
	
	ФайлСуществует = Ванесса.ФайлСуществуетКомандаСистемы(ИмяОжидаемогоФайла);
	Ванесса.ПроверитьНеРавенство(ФайлСуществует,Истина,""В этот момент Файл "" + ИмяОжидаемогоФайла + "" НЕ должен существовать."");
	
	КопияКонтекст = Контекст;
	Контекст      = """";
	
	Макет = ПолучитьМакетСервер(""Макет"");
	Макет.Записать(ИмяОжидаемогоФайла);
	
	Контекст = КопияКонтекст;
	
	ФайлСуществует = Ванесса.ФайлСуществуетКомандаСистемы(ИмяОжидаемогоФайла,""должен существовать после записи макета"");
	Ванесса.ПроверитьРавенство(ФайлСуществует,Истина,""Файл "" + ИмяОжидаемогоФайла + "" должен существовать после записи макета."");
КонецПроцедуры

&НаКлиенте
//в ожидаемом файле уже есть реализованные шаги
//@ВОжидаемомФайлеУжеЕстьРеализованныеШаги()
Процедура ВОжидаемомФайлеУжеЕстьРеализованныеШаги() Экспорт
	ИмяОбработки = Ванесса.ПодключитьВнешнююОбработкуКлиент(Контекст.ИмяОжидаемогоФайла);
	ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"",,,Истина);
	ФормаОбработки.ЯМогуЭтотШагВыполнить();
	
	Контекст.Вставить(""ОбработкаДоПерегенерации"",ФормаОбработки);
КонецПроцедуры

&НаКлиенте
//в фиче есть шаги, которых нет в ожидаемом epf файле
//@ВФичеЕстьШагиКоторыхНетВОжидаемомEpfФайле()
Процедура ВФичеЕстьШагиКоторыхНетВОжидаемомEpfФайле() Экспорт
	ОбработкаДоПерегенерации = Контекст.ОбработкаДоПерегенерации;
	
	МетодЕсть = Ложь;
	Попытка
		ОбработкаДоПерегенерации.ВEpfПоявилсяШагКоторогоНеБылоРаньше();
		МетодЕсть = Истина;
	Исключение
	
	КонецПопытки;
	
	Ванесса.ПроверитьРавенство(МетодЕсть,Ложь,""Метода ВEpfПоявилсяШагКоторогоНеБылоРаньше в epf не должно быть."");
КонецПроцедуры

//&НаКлиенте
////я нажал на кнопку ""СоздатьШаблоныОбработок""
////@ЯНажалНаКнопку(Парам01Строка)
//Процедура ЯНажалНаКнопку(Парам01Строка) Экспорт
//	ВызватьИсключение ""Не реализовано."";
//КонецПроцедуры

//&НаКлиенте
////я получил сгенерированный epf файл в ожидаемом каталоге
////@ЯПолучилСгенерированныйEpfФайлВОжидаемомКаталоге()
//Процедура ЯПолучилСгенерированныйEpfФайлВОжидаемомКаталоге() Экспорт
//	ВызватьИсключение ""Не реализовано."";
//КонецПроцедуры

&НаКлиенте
//сгенерированный epf прошел проверку на корректность после перегенерации
//@СгенерированныйEpfПрошелПроверкуНаКорректностьПослеПерегенерации()
Процедура СгенерированныйEpfПрошелПроверкуНаКорректностьПослеПерегенерации() Экспорт
	ИмяОбработки = Ванесса.ПодключитьВнешнююОбработкуКлиент(Контекст.ИмяОжидаемогоФайла);
	ОбработкаПослеПерегенерации = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"",,,Истина);
	
	
	
	//Нашли1 = Ложь;
	Нашли2 = Ложь;
	//в списке тестов должно быть снипеты УМеняЕстьПростойШаг и ЕстьПростойШаг
	СписокТестов = ОбработкаПослеПерегенерации.ПолучитьСписокТестов(Ванесса);
	Для Каждого Снипет Из СписокТестов Цикл
		//Сообщить("""" + Снипет.Снипет);
		//Если Снипет.Снипет = ""УМеняЕстьПростойШаг()"" Тогда
		//	Нашли1 = Истина;
		//КонецЕсли;	 
		Если Снипет.Снипет = ""ЕстьПростойШаг()"" Тогда
			Нашли2 = Истина;
		КонецЕсли;	 
	КонецЦикла;	
	
	//Если Не Нашли1 Тогда
	//	ВызватьИсключение ""В списке шагов не нашли УМеняЕстьПростойШаг()!"";
	//КонецЕсли;	 
	Если Не Нашли2 Тогда
		ВызватьИсключение ""В списке шагов не нашли ЕстьПростойШаг()!"";
	КонецЕсли;	 
	
	
	
	//этот шаг уже был и должен остаться
	Попытка
		ОбработкаПослеПерегенерации.УМеняЕстьПростойШаг();	
	Исключение
		ВызватьИсключение ""Исчез шаг УМеняЕстьПростойШаг()!"";
	КонецПопытки;	
	
	
	//должен был появиться этот шаг
	Попытка
		ОбработкаПослеПерегенерации.ЕстьПростойШаг();
	Исключение
		Стр = ОписаниеОшибки();
		Если Найти(Стр,""Не реализовано."") = 0 Тогда
			ВызватьИсключение ""Должен был появиться метод ЕстьПростойШаг, но не появился."";
		КонецЕсли;	 
	КонецПопытки;
	
	
	//должен был появиться этот шаг
	Попытка
		ОбработкаПослеПерегенерации.ВEpfПоявилсяШагКоторогоНеБылоРаньше();
	Исключение
		Стр = ОписаниеОшибки();
		Если Найти(Стр,""Не реализовано."") = 0 Тогда
			ВызватьИсключение ""Должен был появиться метод ВEpfПоявилсяШагКоторогоНеБылоРаньше, но не появился."";
		КонецЕсли;	 
	КонецПопытки;
КонецПроцедуры

//окончание текста модуля

&НаКлиенте
//Дано Очищены временные файлы результатов прошлых генераций
//@ОчищеныВременныеФайлыРезультатовПрошлыхГенераций()
Процедура ОчищеныВременныеФайлыРезультатовПрошлыхГенераций() Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	
	
	//ВызватьИсключение ""Не реализовано."";
КонецПроцедуры
",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}