{3,
{38,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0},
{0},1,
{19,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{32,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},2,"Контекст",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{30,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0},
{0},1,
{19,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,
{0,
{0,
{"B",1},0}
},8,"КонтекстКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{8,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},"","",1,
{19,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"NavigatorРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,"",2,0,1,
{19,
{0},0,0,0,7,"LeftCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"LeftCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
},1,
{19,
{0},0,0,0,7,"RightCaptionButtons",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{8,
{0},0,0,0,0,"RightCaptionButtonsExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0}
}
},"//начало текста модуля
&НаКлиенте
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;


&НаКлиенте
Функция ДобавитьШагВМассивТестов(МассивТестов,Снипет,ИмяПроцедуры,ПредставлениеТеста = Неопределено,Транзакция = Неопределено,Параметр = Неопределено)
	Структура = Новый Структура;
	Структура.Вставить(""Снипет"",Снипет);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ИмяПроцедуры"",ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"",ПредставлениеТеста);
	Структура.Вставить(""Транзакция"",Транзакция);
	Структура.Вставить(""Параметр"",Параметр);
	МассивТестов.Добавить(Структура);
КонецФункции

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

//	ДобавитьШагВМассивТестов(ВсеТесты,""ЯОткрылФормуVanessaBehavoirВРежимеСамотестирования()"",""ЯОткрылФормуVanessaBehavoirВРежимеСамотестирования"",""я открыл форму VanessaBehavoir в режиме самотестирования""); //уже был в C:\Commons\Rep\vanessa-behavoir\tests\ManagedApplicationTests\Библиотеки\step_definitions\ЗагрузкаФичи.epf
//	ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗагрузилСпециальнуюТестовуюФичу(Парам01Строка)"",""ЯЗагрузилСпециальнуюТестовуюФичу"",""я загрузил специальную тестовую фичу """"ФичаДляПроверкиГенерацииEPF""""""); //уже был в C:\Commons\Rep\vanessa-behavoir\tests\ManagedApplicationTests\Библиотеки\step_definitions\ЗагрузкаФичи.epf
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯПерешелНаЗакладкуГенераторEPF()"",""ЯПерешелНаЗакладкуГенераторEPF"",""я перешел на закладку генератор EPF"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЕслиОжидаемыйФайлEpfУжеСуществуетТоОнБудетУдален()"",""ЕслиОжидаемыйФайлEpfУжеСуществуетТоОнБудетУдален"",""если ожидаемый файл epf уже существует, то он будет удален"");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯНажалНаКнопку(Парам01Строка)"",""ЯНажалНаКнопку"",""я нажал на кнопку """"СоздатьШаблоныОбработок"""""");
	ДобавитьШагВМассивТестов(ВсеТесты,""ЯПолучилСгенерированныйEpfФайлВОжидаемомКаталоге()"",""ЯПолучилСгенерированныйEpfФайлВОжидаемомКаталоге"",""я получил сгенерированный epf файл в ожидаемом каталоге"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СгенерированныйEpfПрошелПроверкуНаКорректность()"",""СгенерированныйEpfПрошелПроверкуНаКорректность"",""сгенерированный epf прошел проверку на корректность"");
	ДобавитьШагВМассивТестов(ВсеТесты,""СгенерированныйEpfЗнакМинусВСценарииПрошелПроверкуНаКорректность()"",""СгенерированныйEpfЗнакМинусВСценарииПрошелПроверкуНаКорректность"",""И сгенерированный epf ЗнакМинусВСценарии прошел проверку на корректность"");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
	Если Не Контекст.Свойство(""ОткрытаяФормаVanessaBehavoir"") Тогда
		Возврат;
	КонецЕсли;  
	
	ИмяОжидаемогоФайла = Контекст.ИмяОжидаемогоФайла;
	Файл = Новый Файл(ИмяОжидаемогоФайла);
	Если Ванесса.ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя) Тогда
		Ванесса.СделатьСообщение(""ПередОкончаниемСценария(). Удаляю файл "" + ИмяОжидаемогоФайла);
		Ванесса.УдалитьФайлыКомандаСистемы(ИмяОжидаемогоФайла);
	КонецЕсли;  
	
	Если Контекст.Свойство(""ОткрытаяФормаVanessaBehavoir"") Тогда
		Если Контекст.ОткрытаяФормаVanessaBehavoir.Открыта() Тогда
			Контекст.ОткрытаяФормаVanessaBehavoir.Закрыть();
		КонецЕсли;  
		
	КонецЕсли;  
КонецПроцедуры


&НаКлиенте
//я перешел на закладку генератор EPF
//@ЯПерешелНаЗакладкуГенераторEPF()
Процедура ЯПерешелНаЗакладкуГенераторEPF() Экспорт
	ОткрытаяФормаVanessaBehavoir = Контекст.ОткрытаяФормаVanessaBehavoir;
	ОткрытаяФормаVanessaBehavoir.ТекущийЭлемент = ОткрытаяФормаVanessaBehavoir.Элементы.ГруппаГенерацияEPF;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУдалениеФайлов(ДополнительныеПараметры) Экспорт
	Ванесса.ПродолжитьВыполнениеШагов();
КонецПроцедуры

&НаКлиенте
//если ожидаемый файл epf уже существует, то он будет удален
//@ЕслиОжидаемыйФайлEpfУжеСуществуетТоОнБудетУдален()
Процедура ЕслиОжидаемыйФайлEpfУжеСуществуетТоОнБудетУдален() Экспорт
	ИмяОжидаемогоФайла = Контекст.ОткрытаяФормаVanessaBehavoir.Объект.КаталогИнструментов + ""\features\Support\Templates\step_definitions\"" + Контекст.ИмяТестовойФичи + "".epf"";
	Контекст.Вставить(""ИмяОжидаемогоФайла"",ИмяОжидаемогоФайла);
	
	Если НЕ Ванесса.ЕстьПоддержкаАсинхронныхВызовов Тогда
		УдалитьФайлы(ИмяОжидаемогоФайла);
	Иначе
		Ванесса.ЗапретитьВыполнениеШагов();
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьУдалениеФайлов"""", ЭтаФорма)"");
		Выполнить(""НачатьУдалениеФайлов(ОписаниеОповещения,ИмяОжидаемогоФайла)"");
	КонецЕсли;	 
	
	
КонецПроцедуры

&НаКлиенте
//я нажал на кнопку ""СоздатьШаблоныОбработок""
//@ЯНажалНаКнопку(Парам01Строка)
Процедура ЯНажалНаКнопку(ИмяКнопки) Экспорт
	ОткрытаяФормаVanessaBehavoir = Контекст.ОткрытаяФормаVanessaBehavoir;
	ОткрытаяФормаVanessaBehavoir.Объект.ГенерироватьУФ = Истина;
	
	Если ИмяКнопки = ""СоздатьШаблоныОбработок"" Тогда
		ОткрытаяФормаVanessaBehavoir.СоздатьШаблоныОбработок();
	Иначе
		ВызватьИсключение ""Не смог обработать нажатие кнопки: "" + ИмяКнопки;
	КонецЕсли;  
КонецПроцедуры

&НаКлиенте
//я получил сгенерированный epf файл в ожидаемом каталоге
//@ЯПолучилСгенерированныйEpfФайлВОжидаемомКаталоге()
Процедура ЯПолучилСгенерированныйEpfФайлВОжидаемомКаталоге() Экспорт
	ИмяОжидаемогоФайла = Контекст.ИмяОжидаемогоФайла;
	ФайлСуществует = Ванесса.ФайлСуществуетКомандаСистемы(ИмяОжидаемогоФайла);
	Ванесса.ПроверитьРавенство(ФайлСуществует,Истина,""Был создан epf в нужном каталоге"");
КонецПроцедуры

&НаКлиенте
//сгенерированный epf прошел проверку на корректность
//@СгенерированныйEpfПрошелПроверкуНаКорректность()
Процедура СгенерированныйEpfПрошелПроверкуНаКорректность() Экспорт
	ИмяОжидаемогоФайла = Контекст.ИмяОжидаемогоФайла;
	ИмяОбработки = Ванесса.ПодключитьВнешнююОбработкуКлиент(ИмяОжидаемогоФайла);
	ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"",,,Истина);
	//СозданнаяОбработка = ВнешниеОбработки.Создать(ИмяОжидаемогоФайла);
	
	//должна быть эта процедура, и она должна быть без параметров
	Попытка
		ФормаОбработки.ФичаСодержитСтрокуСТочкойВКонце();
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Если Найти(ОписаниеОшибки,""Не реализовано."") = 0 Тогда
			ВызватьИсключение ""Не верно сгенерировалась epf!"";
		КонецЕсли;  
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
//И сгенерированный epf ЗнакМинусВСценарии прошел проверку на корректность
//@СгенерированныйEpfЗнакМинусВСценарииПрошелПроверкуНаКорректность()
Процедура СгенерированныйEpfЗнакМинусВСценарииПрошелПроверкуНаКорректность() Экспорт
	ИмяОжидаемогоФайла = Контекст.ИмяОжидаемогоФайла;
	ИмяОбработки = Ванесса.ПодключитьВнешнююОбработкуКлиент(ИмяОжидаемогоФайла);
	ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"",,,Истина);
КонецПроцедуры

//окончание текста модуля",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}